@using AG.Models
@model Genetic_algorithm.Models.CombinedAlgorithmParameters

@{
    ViewData["Title"] = "Uruchom algorytm";
}

<!-- Kontener z tytułem i przyciskiem w tym samym wierszu -->
<div class="d-flex justify-content-between align-items-center">
    <h2>Uruchom algorytm</h2>

    <!-- Przycisk do otwarcia okienka popup (w prawym górnym rogu) -->
    <button class="btn btn-secondary" id="openModalButton">Ustawienia zaawansowane</button>
</div>

<!-- Formularz na głównej stronie -->
<form asp-action="Run" method="post">
    <fieldset>
        <legend>Parametry harmonogramu</legend>

        @for (int i = 0; i < Model.ScheduleParametersList.Count; i++)
        {
            <div>
                <label for="ScheduleParametersList[@i].WorkRegime">Typ optymalizacji:</label>
                <select name="ScheduleParametersList[@i].WorkRegime" class="form-control">
                    <!option value="1" @(Model.ScheduleParametersList[i].WorkRegime == WorkRegime.FlexibleWorkTime ? "selected" : "")>Elastyczny czas pracy</!option>
                    <!option value="2" @(Model.ScheduleParametersList[i].WorkRegime == WorkRegime.Fourbrigade ? "selected" : "")>Czterobrygadówka</!option>
                </select>
            </div>
            <div>
                <label for="ScheduleParametersList[@i].NumberOfWorkers">Liczba pracowników:</label>
                <input type="number" name="ScheduleParametersList[@i].NumberOfWorkers" class="form-control" value="@Model.ScheduleParametersList[i].NumberOfWorkers" />
            </div>
            <!-- Przycisk do otwarcia okienka preferencji pracowników -->
            <div>
                <button type="button" class="btn btn-secondary mt-2" id="openPreferencesModalButton" disabled>
                    Wprowadź preferencje pracowników
                </button>
            </div>
            <div>
                <label for="ScheduleParametersList[@i].DaysInWeek">Liczba dni:</label>
                <input type="number" name="ScheduleParametersList[@i].DaysInWeek" class="form-control" value="7" readonly />
            </div>
            <div>
                <label for="ScheduleParametersList[@i].NumberofWeeks">Ilość tygodni:</label>
                <input type="number" name="ScheduleParametersList[@i].NumberOfWeeks" class="form-control" value="@Model.ScheduleParametersList[i].NumberOfWeeks" />
            </div>
            
        }
    </fieldset>

    <button type="submit" class="btn btn-primary">Uruchom</button>
</form>

<!-- Okienko popup (Modal) z formularzem do ustawień algorytmu -->
<div class="modal fade" id="algorithmSettingsModal" tabindex="-1" aria-labelledby="algorithmSettingsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="algorithmSettingsModalLabel">Parametry algorytmu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formularz w modalnym okienku -->
                <form asp-action="SaveAlgorithmSettings" method="post">
                    <fieldset>
                        <legend>Parametry optymalizacji</legend>

                        @for (int i = 0; i < Model.OptimizationParametersList.Count; i++)
                        {
                            <div>
                                <label for="OptimizationParametersList[@i].OptimizationType">Typ optymalizacji:</label>
                                <select name="OptimizationParametersList[@i].OptimizationType" class="form-control">
                                    <!option value="1" @(Model.OptimizationParametersList[i].OptimizationType == OptimizationType.Roulette ? "selected" : "")>Ruletka</!option>
                                    <!option value="2" @(Model.OptimizationParametersList[i].OptimizationType == OptimizationType.Tournament ? "selected" : "")>Turniej</!option>
                                </select>
                            </div>
                            <div>
                                <label for="OptimizationParametersList[@i].PopulationSize">Rozmiar populacji:</label>
                                <input type="number" name="OptimizationParametersList[@i].PopulationSize" class="form-control" value="@Model.OptimizationParametersList[i].PopulationSize" min="10" max="1000" />
                            </div>

                            <div>
                                <label for="OptimizationParametersList[@i].PreferenceWeight">Waga preferencji:</label>
                                <input type="number" name="OptimizationParametersList[@i].PreferenceWeight" class="form-control" value="@Model.OptimizationParametersList[i].PreferenceWeight" min="0" max="1" step="0.01" />
                            </div>

                            <div>
                                <label for="OptimizationParametersList[@i].MutationFrequency">Częstotliwość mutacji:</label>
                                <input type="number" name="OptimizationParametersList[@i].MutationFrequency" class="form-control" value="@Model.OptimizationParametersList[i].MutationFrequency" min="0" max="1" step="0.01" />
                            </div>

                            <div>
                                <label for="OptimizationParametersList[@i].NumberOfParents">Liczba rodziców:</label>
                                <input type="number" name="OptimizationParametersList[@i].NumberOfParents" class="form-control" value="@Model.OptimizationParametersList[i].NumberOfParents" min="2" max="100" />
                            </div>

                            <div>
                                <label for="OptimizationParametersList[@i].ElitePercentage">Procent elitarnych osobników:</label>
                                <input type="number" name="OptimizationParametersList[@i].ElitePercentage" class="form-control" value="@Model.OptimizationParametersList[i].ElitePercentage" min="0" max="1" step="0.01" />
                            </div>
                        }
                    </fieldset>

                    <button type="submit" class="btn btn-primary">Zapisz</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal dla preferencji pracowników -->
<div class="modal fade" id="preferencesModal" tabindex="-1" aria-labelledby="preferencesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="preferencesModalLabel">Preferencje pracowników</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="PreferencesForm">
                    <div id="preferencesContainer"></div>
                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary">Zapisz preferencje</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap 5 JS i Popper.js do działania okienka popup -->
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

<script>
    // Modal zaawansowanych ustawień
    var modal = new bootstrap.Modal(document.getElementById('algorithmSettingsModal'));
    document.getElementById('openModalButton').addEventListener('click', function () {
        modal.show();
    });

    // Obsługa przycisku preferencji pracowników
    const openPreferencesModalButton = document.getElementById('openPreferencesModalButton');
    const preferencesModal = new bootstrap.Modal(document.getElementById('preferencesModal'));
    const preferencesContainer = document.getElementById('preferencesContainer');
    const numberOfWorkersInput = document.querySelector('input[name="ScheduleParametersList[0].NumberOfWorkers"]'); // Zakładając tylko jeden zestaw danych

    // Aktywacja przycisku dodania preferencji
    numberOfWorkersInput.addEventListener('input', () => {
        const numberOfWorkers = parseInt(numberOfWorkersInput.value);
        openPreferencesModalButton.disabled = isNaN(numberOfWorkers) || numberOfWorkers <= 0;
    });
    
    // Otwieranie modala i generowanie pól preferencji
    openPreferencesModalButton.addEventListener('click', () => {
        const numberOfWorkers = parseInt(numberOfWorkersInput.value);
        preferencesContainer.innerHTML = ''; // Wyczyść pola przy otwieraniu
    
        for (let i = 1; i <= numberOfWorkers; i++) {
            const workerPreferences = `
                <fieldset class="mb-3">
                    <legend>Pracownik ${i}</legend>
                    <div class="mb-2">
                        <label for="Worker${i}PreferredShifts" class="form-label">Preferowane zmiany (lub brak):</label>
                        <select id="Worker${i}PreferredShifts" name="WorkerPreferences[${i - 1}].PreferredShifts" class="form-select" multiple>
                            <option value="">Brak preferencji</option>
                            <option value="1">Rano</option>
                            <option value="2">Popołudnie</option>
                            <option value="3">Noc</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label for="Worker${i}MaxWorkDays" class="form-label">Maksymalna liczba dni pracy:</label>
                        <input type="number" id="Worker${i}MaxWorkDays" name="WorkerPreferences[${i - 1}].MaxWorkDays" class="form-control" min="1" max="7" placeholder="Brak preferencji" />
                    </div>
                    <div class="mb-2">
                        <label for="Worker${i}MinDaysOff" class="form-label">Minimalna liczba dni wolnych:</label>
                        <input type="number" id="Worker${i}MinDaysOff" name="WorkerPreferences[${i - 1}].MinDaysOff" class="form-control" min="0" max="6" placeholder="Brak preferencji" />
                    </div>
                </fieldset>
            `;
            preferencesContainer.insertAdjacentHTML('beforeend', workerPreferences);
        }
    
        preferencesModal.show();
    });
    
    // Obsługa zapisania preferencji
    document.getElementById('PreferencesForm').addEventListener('submit', (e) => {
        e.preventDefault();
        preferencesModal.hide();
        alert('Preferencje zostały zapisane!');
    });
</script>
